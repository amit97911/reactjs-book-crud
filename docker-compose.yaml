services:
    mysql:
        container_name: 'book_management_mysql'
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'mysql-docker:/var/lib/mysql'
            - './mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - 'mysql-docker'
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    expressjs:
        container_name: 'book_management_express'
        image: "node:22.2.0"
        user: "node"
        working_dir: /home/node/app
        environment:
            - NODE_ENV=development
            # - NODE_ENV=production
        volumes:
            - ./backend:/home/node/app
        expose:
            - "3000"
        ports: # use if it is necessary to expose the container to the host machine
            - "3001:3000"
        networks:
            - 'mysql-docker'
        depends_on:
            - mysql
        command: "tail -f /dev/null"
        # command: "npm run start"
        # command: "npx create-next-app@latest next-crud --eslint --tailwind --app --ts --use-npm --force --no-install"


    reactjs:
        container_name: 'book_management_react'
        image: "node:22.2.0"
        user: "node"
        working_dir: /home/node/app
        environment:
            - NODE_ENV=development
            # - NODE_ENV=production
        volumes:
            - ./frontend:/home/node/app
        expose:
            - "3000"
        ports: # use if it is necessary to expose the container to the host machine
            - "3002:3000"
        networks:
            - 'mysql-docker'
        depends_on:
            - mysql
            - expressjs
        command: "tail -f /dev/null"
        # command: "npm run start"
        # command: "npx create-next-app@latest next-crud --eslint --tailwind --app --ts --use-npm --force --no-install"

networks:
    mysql-docker:
        driver: bridge
volumes:
    mysql-docker:
        driver: local
